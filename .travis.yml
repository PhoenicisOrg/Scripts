# avoid double builds on pull requests
branches:
  only:
    master

matrix:
  include:
    - stage: Check JSON format
      before_install: npm install -g json-align
      script:
        - find . -name "*.json" -print0 | xargs -0 json-align -i
        - git diff
        - diffs=$(git diff --name-only | wc -l); if [ $diffs != 0 ]; then exit 1; fi
      after_failure:
        - echo "Some JSON files are not aligned. Please run json-align."
        - git diff --name-only

    - stage: Update translations
      before_install:
        - sudo apt-get -qq update
        - sudo apt-get install -y python-jsonschema python-pil gettext
      script:
        - python ./validate.py
      after_success:
        # push translation updates only for master (PR changes must be committed to master before they are taken into account)
        - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./i18n/push_translations.sh; fi

    # Update JSDoc
    - stage: Update JSDoc
      before_install: npm install -g jsdoc
      script:
        # push JSDoc updates only for master (PR changes must be committed to master before they are taken into account)
        - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./push_jsdoc.sh; fi

    # Check GitHub Pages
    - stage: Check GitHub Pages
      os: linux
      language: ruby
      rvm:
        - 2.5
      before_install: cd docs
      script:
        - bundle exec jekyll build
        - bundle exec htmlproofer ./_site --only-4xx --check-favicon --check-html --assume-extension --file-ignore=/jsdoc/

env:
  global:
    # to create secure for travis-ci.com
    # 1. create personal access token with public_repo permissions
    # 2. clone this repo (not a fork)
    # 3. run in the clone: travis encrypt GH_TOKEN="<access_token>" --pro (GH_TOKEN is the variable which is used e.g. in push_jsdoc.sh)
    # 4. set output below
    - secure: "HZ7wbZdwnp3iUJwfL42HnH8fnTcVz/9y9HKFy2MXw38ZtZMoXMB1a3duM0a+UFY59biFVb2PgvqEzl5e8i1fygCN2gYtyWNvvMsNTD0Iq9eOo6nzSkWjWoWIn1TMUEjDS4xZdJLHkmnp7E4h4xc4CNt3HZA5rRbiko8wXCLeWh0UM3YXjs/b14tDlZRy29Sn4LuMSdGWi8lqqTF+4rAAFJ7aQOZDJfse/lZr2FTxRtOdsxPSizU3wJ/Hk/uQvOtp6CizC0c53r49ODqDuFeHj0AOeAR9DpM0B7MojZiFKW2h74vMMcCBKdeyX3K7iLn55Z65p/9bwWCPWwAbwy4Vrbi4OMKc4WdD0RE5h0OOXCdw7xuCA1nPg5+xk5l/0TAXjmb/luklyFbNBXyGKjF5CeEaUhrn9LFmOuyoqYoVf4BD2TA32kqMGxVchf8bnTeM25slI/wi5Sgjpj6GXuxay9bUt13QPQLcT3sNp1Jftvm4gZPdY9TR9m+nPK7nhIZjFWeHJu2nIzcfJdqMTcmLV+iKqZSSL2CJqCUbPEIVwtIj3ZytFrWTX88H97K/9UMDPQ+YbyT1I9XwkXY2PT66F5WE1UVMW/3SKw/jZON8AjYKD4mTd24kRMNfNhXGsg3L+NS8dsDXz1cfSZpLGxe4rvguZInoziJGLN27jGwyN0I="
